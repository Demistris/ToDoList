@page "/list/{ListId}"
@using ToDoList.Shared.Models
@using ToDoListProject.Services
@inject ToDoService ToDoService
@inject ApiService ApiService
@inject HttpClient Http

<div>
    @if (_isLoading)
    {
        <p>Loading...</p>
    }
    else if (ToDoListModel == null)
    {
        <p>List not found</p>
    }
    else
    {
        <div class="alert alert-light d-flex justify-content-between align-items-center" role="alert">
            <div>
                @if (_isEditing)
                {
                    <form @onsubmit="SaveEdit">
                        <input class="form-control d-inline w-auto" @ref="_editInputElement" @bind="_editListName" @onfocusout="SaveEdit" />
                    </form>
                }
                else
                {
                    <h2 class="m-0" @onclick="EditListName">@ToDoListModel.ListName</h2>
                }
            </div>
            <div>
                <button class="btn p-1 me-2">
                    <i class="fa-solid fa-user-plus fa-lg"></i>
                </button>
                <button class="btn p-1" @onclick="ShowDeleteConfirmation">
                    <i class="fa-solid fa-trash fa-lg"></i>
                </button>
            </div>
        </div>

        <div class="container-fluid">
            <div class="row">
                <form @onsubmit="AddNewItem" class="input-group">
                    <div class="col-md-auto p-1">
                        <button type="submit" class="btn btn-secondary w-100">Add</button>
                    </div>
                    <div @onkeydown:preventDefault="_preventDefault" class="col p-1">
                        <textarea type="text" class="form-control" rows="1" placeholder="New item..."
                                  @bind="_newToDoItem.Description"
                                  @bind:event="oninput"
                                  @onkeydown="HandleEnterKeyDown" />
                    </div>
                </form>
            </div>
        </div>

        <ModalComponent Show="_showDeleteConfirmation"
                        Title="Delete List"
                        Content="Are you sure you want to delete this list? This action is irreversible."
                        OnAccept="AcceptDeleteConfirmation"
                        OnCancel="HideDeleteConfirmation">
        </ModalComponent>

        <br />

        <ul class="list-group">
            <SortableList Items="_uncompletedToDoItems" OnReorder="HandleReorder">
                <ItemTemplate Context="toDo">
                    <ToDoItemComponent Item="toDo" OnUpdate="UpdateItemCompletionStatus" OnDelete="HandleDeleteItem" @key="toDo.Id" />
                </ItemTemplate>
            </SortableList>

            @foreach (ToDoItem toDoItem in _completedToDoItems)
            {
                <ToDoItemComponent Item="toDoItem" OnUpdate="UpdateItemCompletionStatus" OnDelete="HandleDeleteItem" @key="toDoItem.Id" />
            }
        </ul>
    }
</div>