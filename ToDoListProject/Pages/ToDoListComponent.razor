@page "/list/{ListId}"
@inject ToDoService ToDoService
@inject NavigationManager NavigationManager
@using ToDoListProject.Models

<div>
    @if (ToDoListModel == null)
    {
        <p>List not found!</p>
    }
    else
    {
        <div class="alert alert-light text-center" role="alert">
            @if (_isEditing)
            {
                <input class="form-control d-inline w-auto text-center" @bind="_editListName" @onblur="SaveEdit" @onkeydown="HandleKeyDownToSaveEdit" />
            }
            else
            {
                <h3 @onclick="EditListName">@ToDoListModel.ListName</h3>
            }
        </div>

        <div class="container-fluid">
            <div class="row">
                <form @onsubmit="AddNewItem" class="input-group">
                    <div class="col-10 p-0">
                        <input type="text" class="form-control" placeholder="New item..." @bind="_newToDoItem.Description" />
                    </div>
                    <div class="col-2 p-0">
                        <button type="submit" class="btn btn-secondary w-100">Add</button>
                    </div>
                </form>
            </div>
        </div>

        <br />

        <ul class="list-group">
            <SortableList Items="_uncompletedToDoItems" OnReorder="HandleReorder">
                <ItemTemplate Context="toDo">
                    <ToDoItemComponent Item="toDo" OnUpdate="UpdateItemCompletionStatus" OnDelete="HandleDeleteItem" @key="toDo.Id" />
                </ItemTemplate>
            </SortableList>

            @foreach (ToDoItem toDoItem in _completedToDoItems)
            {
                <ToDoItemComponent Item="toDoItem" OnUpdate="UpdateItemCompletionStatus" OnDelete="HandleDeleteItem" @key="toDoItem.Id" />
            }
        </ul>
    }
</div>